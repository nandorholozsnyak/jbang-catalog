resource "aws_iam_role" "iam_for_lambda" {
  name = "iam_for_lambda"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "lambda.amazonaws.com"
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF
}

resource "local_file" "jar_file" {
  filename       = "{baseName}.jar"
  content_base64 = filebase64sha256("{baseName}.java")
  provisioner "local-exec" {
    command = "jbang build --fresh {baseName}.java && jbang export portable --fresh --force {baseName}.jar && jar uf {baseName}.jar lib/"
  }
}

resource "aws_lambda_function" "function" {
  filename         = local_file.jar_file.filename
  source_code_hash = local_file.jar_file.content_base64
  function_name    = "{baseName}"
  role             = aws_iam_role.iam_for_lambda.arn
  handler          = "io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest"

  depends_on = [local_file.jar_file]

  runtime = "java11"
  memory_size = 256

}